kwic(corpus_PTT, pattern_tag, valuetype = 'regex') %>% head(10)
tag_text <- function(x) {
tagger[x] %>%
paste0(names(.), sep = '/', collapse = '')
}
PTT_df_tagged <- PTT_df %>%
mutate(內容_seg = map_chr(內容, seg_text),
內容_tag = map_chr(內容, tag_text))
corpus_PTT <- corpus(PTT_df_tagged,
text_field = '內容_tag')
pattern_tag <- '\\b[思想懷]念/[vn]([^/]+/[a-z]+)*?[^/]+/[nr]\\b'
kwic(corpus_PTT, pattern_tag, valuetype = 'regex') %>% head(10)
View(PTT_df_tagged)
tag_text <- function(x) {
tagger[x] %>%
paste0(names(.), sep = ' ', collapse = '/')
}
PTT_df_tagged <- PTT_df %>%
mutate(內容_seg = map_chr(內容, seg_text),
內容_tag = map_chr(內容, tag_text))
View(PTT_df_tagged)
tag_text <- function(x) {
tagger[x] %>%
paste0(names(.), sep = '', collapse = '/')
}
PTT_df_tagged <- PTT_df %>%
mutate(內容_seg = map_chr(內容, seg_text),
內容_tag = map_chr(內容, tag_text))
View(PTT_df_tagged)
View(PTT_df_tagged)
tag_text <- function(x) {
tagger[x] %>%
paste0(names(.), sep = '/')
}
PTT_df_tagged <- PTT_df %>%
mutate(內容_seg = map_chr(內容, seg_text),
內容_tag = map_chr(內容, tag_text))
tag_text <- function(x) {
tagger[x] %>%
paste(names(.), sep = '/', collapse = '')
}
PTT_df_tagged <- PTT_df %>%
mutate(內容_seg = map_chr(內容, seg_text),
內容_tag = map_chr(內容, tag_text))
View(PTT_df_tagged)
corpus_PTT <- corpus(PTT_df_tagged,
text_field = '內容_tag')
pattern_tag <- '\\b[思想懷]念/[vn]([^/]+/[a-z]+)*?[^/]+/[nr]\\b'
kwic(corpus_PTT, pattern_tag, valuetype = 'regex') %>% head(10)
pattern_tag <- '\\b[思想懷]念/[vn]\\b'
kwic(corpus_PTT, pattern_tag, valuetype = 'regex') %>% head(10)
pattern_tag <- '[思想懷]念/[vn]([^/]+/[a-z]+)*?[^/]+/[nr]'
kwic(corpus_PTT, pattern_tag, valuetype = 'regex') %>% head(10)
pattern_tag <- '[思想懷]念/[vn]'
kwic(corpus_PTT, pattern_tag, valuetype = 'regex') %>% head(10)
pattern_tag <- '[思想懷]念/[a-z]'
kwic(corpus_PTT, pattern_tag, valuetype = 'regex') %>% head(10)
pattern_tag <- '[思想懷]念'
kwic(corpus_PTT, pattern_tag, valuetype = 'regex') %>% head(10)
tag_text <- function(x) {
tagger[x] %>%
paste(names(.), sep = '/', collapse = ' ')
}
PTT_df_tagged <- PTT_df %>%
mutate(內容_seg = map_chr(內容, seg_text),
內容_tag = map_chr(內容, tag_text))
corpus_PTT <- corpus(PTT_df_tagged,
text_field = '內容_tag')
pattern_tag <- '[思想懷]念/\\s[a-z]+([^/]+/\\s[a-z]+)*?[^/]+/\\s[nr]'
kwic(corpus_PTT, pattern_tag, valuetype = 'regex') %>% head(10)
pattern_tag <- '[思想懷]念/\\s[a-z]'
kwic(corpus_PTT, phrase(pattern_tag), valuetype = 'regex') %>% head(10)
kwic(corpus_PTT, phrase('[思想懷]念/\\s[a-z]')) %>% head(10)
# define regex
pattern_tag <- '\\b[思想懷]念/[a-z]+([^/]+/[a-z]+)*?[^/]+/[nr]'
PTT_missing <- PTT_df_tagged %>%
unnest_tokens(output = construction,
input = 內容_tag,
token = function(x) str_extract_all(x, pattern = pattern_tag)) %>%
mutate(pattern = str_remove_all(construction, '/[a-z]+')) %>%
mutate(obj = str_replace(pattern, '.+\\s([^\\s]+)$', '\\1')) %>%
select(看板, 編號, pattern, obj)
View(PTT_missing)
kwic(corpus_HP, pattern, valuetype = 'regex') %>%
#mutate(board = '政黑', id = row_number()) %>%
select(看板, 編號, pre, keyword, post) %>%
head(10) %>%
knitr::kable(align = 'c')
sample_n(GSP_df, 10) %>% arrange(編號)
head(GSP_df)
PTT_missing %>%
sample_n(10) %>%
arrange(看板, 編號)
knitr::kable(align = 'c')
PTT_missing %>%
sample_n(10) %>%
arrange(看板, 編號) %>%
knitr::kable(align = 'c')
PTT_df_tagged %>%
unnest_tokens(word, 內容_seg,
token = function(x) str_split(x, '\\s+|\u3000')) %>%
filter(nzchar(word)) %>%
count(word, sort = T) -> PTT_word
# Joint frequency table
PTT_missing %>%
count(pattern_tag, sort = T) %>%
mutate(w1 = str_replace(pattern, '.+\\s([^\\s]+)$', '\\1')) %>%
mutate(w1_freq = PTT_word$n[match(w1, PTT_word$word)]) -> PTT_missing_table
# define regex
pattern_tag <- '\\b[思想懷]念/[a-z]+([^/]+/[a-z]+)*?[^/]+/[nr]'
# Extract patterns
PTT_missing <- PTT_df_tagged %>%
unnest_tokens(output = construction,
input = 內容_tag,
token = function(x) str_extract_all(x, pattern = pattern_tag)) %>%
mutate(pattern = str_remove_all(construction, '/[a-z]+')) %>%
mutate(obj = str_replace(pattern, '.+\\s([^\\s]+)$', '\\1')) %>%
select(看板, 編號, pattern, obj)
PTT_missing %>%
sample_n(10) %>%
arrange(看板, 編號) %>%
knitr::kable(align = 'c')
# word freq
PTT_df_tagged %>%
unnest_tokens(word, 內容_seg,
token = function(x) str_split(x, '\\s+|\u3000')) %>%
filter(nzchar(word)) %>%
count(word, sort = T) -> PTT_word
# Joint frequency table
PTT_missing %>%
count(pattern_tag, sort = T) %>%
mutate(w1 = str_replace(pattern, '.+\\s([^\\s]+)$', '\\1')) %>%
mutate(w1_freq = PTT_word$n[match(w1, PTT_word$word)]) -> PTT_missing_table
# Joint frequency table
PTT_missing %>%
count(pattern, sort = T) %>%
mutate(w1 = str_replace(pattern, '.+\\s([^\\s]+)$', '\\1')) %>%
mutate(w1_freq = PTT_word$n[match(w1, PTT_word$word)]) -> PTT_missing_table
View(PTT_missing_table)
View(PTT_missing)
# Joint frequency table
PTT_missing %>%
filter(str_detect(pattern, '思念')) %>%
count(pattern, sort = T) %>%
mutate(w1 = str_replace(pattern, '.+\\s([^\\s]+)$', '\\1')) %>%
mutate(w1_freq = PTT_word$n[match(w1, PTT_word$word)]) -> PTT_sinian_table
View(PTT_sinian_table)
PTT_missing %>%
filter(str_detect(pattern, '想念')) %>%
count(pattern, sort = T) %>%
mutate(w1 = str_replace(pattern, '.+\\s([^\\s]+)$', '\\1')) %>%
mutate(w1_freq = PTT_word$n[match(w1, PTT_word$word)]) -> PTT_xiangnian_table
PTT_missing %>%
filter(str_detect(pattern, '懷念')) %>%
count(pattern, sort = T) %>%
mutate(w1 = str_replace(pattern, '.+\\s([^\\s]+)$', '\\1')) %>%
mutate(w1_freq = PTT_word$n[match(w1, PTT_word$word)]) -> PTT_huainian_table
PTT_sinian_table %>%
select(w1, w1_freq, n) %>%
write_tsv('sinian.tsv')
PTT_xiangnian_table %>%
select(w1, w1_freq, n) %>%
write_tsv('xiangnian.tsv')
PTT_huainian_table %>%
select(w1, w1_freq, n) %>%
write_tsv('huainian.tsv')
# save info in a text
sink('missing_info.txt')
cat('Corpus Size: ', sum(PTT_word$n), '\n')
cat('Freq of sinian: ', sum(PTT_sinian_table$n), '\n')
cat('Freq of xiangnian: ', sum(PTT_xiangnian_table$n), '\n')
cat('Freq of huainian: ', sum(PTT_huainian_table$n), '\n')
sink()
# Create new file
file.create('sinian_results.txt')
file.create('xiangnian_results.txt')
file.create('huainian_results.txt')
source('coll.analysis.r')
source('coll.analysis.r')
source('coll.analysis.r')
source('coll.analysis.r')
# load the output txt
sinian_results <- readLines('sinian_results.txt', encoding = 'utf-8') %>%
.[-c(1:17, (length(results)-17):length(results))]
# load the output txt
sinian_results <- readLines('sinian_results.txt', encoding = 'utf-8') %>%
.[-c(1:17, (length(.)-17):length(.))]
xiangnian_results <- readLines('xiangnian_results.txt', encoding = 'utf-8') %>%
.[-c(1:17, (length(.)-17):length(.))]
huainian_results <- readLines('huainian_results.txt', encoding = 'utf-8') %>%
.[-c(1:17, (length(.)-17):length(.))]
# convert into a table
sinian_collo_table <- read_tsv(sinian_results)
xiangnian_collo_table <- read_tsv(xiangnian_results)
huainian_collo_table <- read_tsv(huainian_results)
View(sinian_collo_table)
View(xiangnian_collo_table)
View(huainian_collo_table)
HP_df <- read_csv('PTT_HP.csv') %>%
filter(!str_detect(標題, 'Re')) %>%
mutate(編號 = row_number())
BG_df <- read_csv('PTT_BG.csv') %>%
filter(!str_detect(標題, 'Re')) %>%
mutate(編號 = row_number())
GSP_df <- read_csv('PTT_GSP.csv') %>%
mutate(看板 = '八卦')
head(HP_df)
head(BG_df)
head(GSP_df)
boards <- c('政黑', '男女', '八卦')
HP_npost <- nrow(HP_df)
BG_npost <- nrow(BG_df)
GSP_npost <- nrow(GSP_df)
HP_nchar <- HP_df$內容 %>% nchar %>% sum(na.rm = T)
BG_nchar <- BG_df$內容 %>% nchar %>% sum(na.rm = T)
GSP_nchar <- GSP_df$內容 %>% nchar %>% sum(na.rm = T)
tidy_HP <- HP_df %>% unnest_tokens('word', '內容', token = 'words')
tidy_BG <- BG_df %>% unnest_tokens('word', '內容', token = 'words')
tidy_GSP <- GSP_df %>% unnest_tokens('word', '內容', token = 'words')
HP_ntok <- tidy_HP %>% nrow()
BG_ntok <- tidy_BG %>% nrow()
GSP_ntok <- tidy_GSP %>% nrow()
HP_nword <- tidy_HP %>% count(word) %>% nrow()
BG_nword <- tidy_BG %>% count(word) %>% nrow()
GSP_nword <- tidy_GSP %>% count(word) %>% nrow()
tibble::tibble(看板 = boards,
篇數 = c(HP_npost, BG_npost, GSP_npost),
字數 = c(HP_nchar, BG_nchar, GSP_nchar),
tokens = c(HP_ntok, BG_ntok, GSP_ntok),
words = c(HP_nword, BG_nword, GSP_nword))
HP_freq <- tidy_HP %>% count(word)
BG_freq <- tidy_BG %>% count(word)
GSP_freq <- tidy_GSP %>% count(word)
count_freq <- function (x, y) {
if (y %in% x$word) {
number <- filter(x, word == y)$n
}
else {number <- 0}
}
tok_com <- tibble::tibble(動詞 = c('思念', '想念', '懷念'),
政黑 = c(count_freq(HP_freq, '思念'), count_freq(HP_freq, '想念'), count_freq(HP_freq, '懷念')),
男女 = c(count_freq(BG_freq, '思念'), count_freq(BG_freq, '想念'), count_freq(BG_freq, '懷念')),
八卦 = c(count_freq(GSP_freq, '思念'), count_freq(GSP_freq, '想念'), count_freq(GSP_freq, '懷念')))
tok_com
tok_com %>%
gather(看板, 出現次數, -動詞) %>%
ggplot(aes(動詞, 出現次數, fill = 看板)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values = c('green', 'pink', 'blue')
tok_com %>%
gather(看板, 出現次數, -動詞) %>%
ggplot(aes(動詞, 出現次數, fill = 看板)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values = c('green', 'pink', 'blue'))
tok_com %>%
gather(看板, 出現次數, -動詞) %>%
ggplot(aes(動詞, 出現次數, fill = 看板)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values = c('green', 'orange', 'blue'))
tok_com %>%
gather(看板, 出現次數, -動詞) %>%
ggplot(aes(動詞, 出現次數, fill = 看板)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values = c('green', 'red', 'blue'))
tok_com %>%
gather(看板, 出現次數, -動詞) %>%
ggplot(aes(動詞, 出現次數, fill = 看板)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values = c('dark green', 'red', 'blue'))
tok_com %>%
gather(看板, 出現次數, -動詞) %>%
ggplot(aes(動詞, 出現次數, fill = 看板)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values = c('dark green', 'light red', 'blue'))
tok_com %>%
gather(看板, 出現次數, -動詞) %>%
ggplot(aes(動詞, 出現次數, fill = 看板)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values = c('dark green', 'scarlet', 'blue'))
tok_com %>%
gather(看板, 出現次數, -動詞) %>%
ggplot(aes(動詞, 出現次數, fill = 看板)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values = c('#7cae00', '#f8766d', '#00bfc4'))
tok_com %>%
gather(看板, 出現次數, -動詞) %>%
ggplot(aes(動詞, 出現次數, fill = 看板)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values = c('#00b81f', '#f8766d', '#00a5ff'))
sinian_collo_table %>%
filter(relation == 'attraction') %>%
select(words, obs.freq,
delta.p.constr.to.word,
delta.p.word.to.constr,
coll.strength) %>%
pivot_longer(cols = c('obs.freq',
'coll.strength'),
names_to = 'metric',
values_to = 'strength') %>%
mutate(metric = factor(metric,
levels = c('obs.freq',
'coll.strength'))) %>%
group_by(metric) %>%
top_n(10, strength) %>%
ungroup %>%
arrange(metric, desc(strength)) -> coll_table_long
graphs <- list()
for(i in levels(coll_table_long$metric)){
coll_table_long %>%
filter(metric %in% i) %>%
ggplot(aes(reorder(words, strength), strength, fill=strength)) +
geom_col(show.legend = F) +
coord_flip() +
labs(x = 'Collexemes',
y = 'Strength',
title = i)+
theme(text = element_text(family = 'Arial Unicode MS')) -> graphs[[i]]
}
require(ggpubr)
ggpubr::ggarrange(plotlist = graphs)
sinian_collo_table %>%
arrange(-coll.strength) %>%
head(10) %>%
knitr::kable(align = 'c')
# from wide to long
sinian_collo_table %>%
filter(relation == 'attraction') %>%
select(words, obs.freq,
delta.p.constr.to.word,
delta.p.word.to.constr,
coll.strength) %>%
pivot_longer(cols = c('obs.freq',
'coll.strength'),
names_to = 'metric',
values_to = 'strength') %>%
mutate(metric = factor(metric,
levels = c('obs.freq',
'coll.strength'))) %>%
group_by(metric) %>%
top_n(10, strength) %>%
ungroup %>%
arrange(metric, desc(strength)) -> coll_table_long
# plot
graphs <- list()
for(i in levels(coll_table_long$metric)){
coll_table_long %>%
filter(metric %in% i) %>%
ggplot(aes(reorder(words, strength), strength, fill=strength)) +
geom_col(show.legend = F) +
coord_flip() +
labs(x = 'Collexemes',
y = 'Strength',
title = i)+
theme(text = element_text(family = 'Arial Unicode MS')) -> graphs[[i]]
}
require(ggpubr)
ggpubr::ggarrange(plotlist = graphs)
coll_table_long
sinian_collo_table %>%
filter(relation == 'attraction') %>%
select(words, obs.freq, coll.strength) %>%
pivot_longer(cols = c('obs.freq', 'coll.strength'),
names_to = 'metric',
values_to = 'strength') %>%
mutate(metric = factor(metric,
levels = c('obs.freq', 'coll.strength'))) %>%
group_by(metric) %>%
top_n(10, strength) %>%
ungroup %>%
arrange(metric, -strength) -> coll_table_long
coll_table_long
graphs <- list()
for(i in levels(coll_table_long$metric)){
coll_table_long %>%
filter(metric %in% i) %>%
ggplot(aes(reorder(words, strength), strength, fill=strength)) +
geom_col(show.legend = F) +
coord_flip() +
labs(x = 'Keywords',
y = 'Strength',
title = i)+
theme(text = element_text(family = 'Arial Unicode MS')) -> graphs[[i]]
}
require(ggpubr)
ggpubr::ggarrange(plotlist = graphs)
sinian_coll_table_long
sinian_collo_table %>%
filter(relation == 'attraction') %>%
select(words, obs.freq, coll.strength) %>%
pivot_longer(cols = c('obs.freq', 'coll.strength'),
names_to = 'metric',
values_to = 'strength') %>%
mutate(metric = factor(metric,
levels = c('obs.freq', 'coll.strength'))) %>%
group_by(metric) %>%
top_n(10, strength) %>%
ungroup %>%
arrange(metric, -strength) -> sinian_coll_table_long
sinian_coll_table_long
graphs <- list()
for(i in levels(coll_table_long$metric)){
coll_table_long %>%
filter(metric %in% i) %>%
ggplot(aes(reorder(words, strength), strength, fill=strength)) +
geom_col(show.legend = F) +
coord_flip() +
labs(x = 'Keywords',
y = 'Strength',
title = i)+
theme(text = element_text(family = 'Arial Unicode MS')) -> graphs[[i]]
}
require(ggpubr)
ggpubr::ggarrange(plotlist = graphs)
sinian_collo_table %>%
arrange(-coll.strength) %>%
head(10) %>%
knitr::kable(align = 'c')
sinian_collo_table %>%
filter(relation == 'attraction') %>%
select(words, obs.freq, coll.strength) %>%
ggplot(aes(reorder(words, coll.strength), coll.strength, fill = coll.strength)) +
geom_col(show.legend = F) +
coord_flip() +
labs(x = 'Keywords',
y = 'Strength',
title = 'PTT sinian')+
theme(text = element_text(family = 'Arial Unicode MS'))
sinian_collo_table %>%
filter(relation == 'attraction') %>%
select(words, obs.freq, coll.strength) %>%
top_n(10, coll.strength) %>%
ggplot(aes(reorder(words, coll.strength), coll.strength, fill = coll.strength)) +
geom_col(show.legend = F) +
coord_flip() +
labs(x = 'Keywords',
y = 'Strength',
title = 'PTT sinian')+
theme(text = element_text(family = 'Arial Unicode MS'))
sinian_collo_table %>%
filter(relation == 'attraction') %>%
select(words, obs.freq, coll.strength) %>%
top_n(10, coll.strength) %>%
ggplot(aes(reorder(words, coll.strength), coll.strength, fill = coll.strength)) +
geom_col(show.legend = F) +
coord_flip() +
labs(x = 'Keywords',
y = 'Strength (G2)',
title = 'Collocation of 思念 in PTT')+
theme(text = element_text(family = 'Arial Unicode MS'))
xiangnian_collo_table %>%
filter(relation == 'attraction') %>%
select(words, obs.freq, coll.strength) %>%
top_n(10, coll.strength) %>%
ggplot(aes(reorder(words, coll.strength), coll.strength, fill = coll.strength)) +
geom_col(show.legend = F) +
coord_flip() +
labs(x = 'Keywords',
y = 'Strength (G2)',
title = 'Collocation of 想念 in PTT')+
theme(text = element_text(family = 'Arial Unicode MS'))
huainian_collo_table %>%
filter(relation == 'attraction') %>%
select(words, obs.freq, coll.strength) %>%
top_n(10, coll.strength) %>%
ggplot(aes(reorder(words, coll.strength), coll.strength, fill = coll.strength)) +
geom_col(show.legend = F) +
coord_flip() +
labs(x = 'Keywords',
y = 'Strength (G2)',
title = 'Collocation of 懷念 in PTT')+
theme(text = element_text(family = 'Arial Unicode MS'))
knitr::opts_chunk$set(echo = TRUE)
tibble(看板 = boards,
篇數 = c(HP_npost, BG_npost, GSP_npost),
字數 = c(HP_nchar, BG_nchar, GSP_nchar),
tokens = c(HP_ntok, BG_ntok, GSP_ntok),
words = c(HP_nword, BG_nword, GSP_nword)) %>%
rbind(c('合計', colSums(.[,2:5])))
library(tidyverse)
library(rvest)
library(jiebaR)
library(future.apply)
library(tidytext)
library(quanteda)
tibble(看板 = boards,
篇數 = c(HP_npost, BG_npost, GSP_npost),
字數 = c(HP_nchar, BG_nchar, GSP_nchar),
tokens = c(HP_ntok, BG_ntok, GSP_ntok),
words = c(HP_nword, BG_nword, GSP_nword)) %>%
rbind(c('合計', colSums(.[,2:5])))
PTT_df <- rbind(HP_df, BG_df, GSP_df)
corpus_PTT <- corpus(PTT_df, text_field = '內容')
kwic(corpus_PTT, '思念') %>%
mutate(id = row_number()) %>%
select(id, pre, keyword, post) %>%
head(10) %>%
knitr::kable(align = 'c')
kwic(corpus_PTT, '想念') %>%
mutate(id = row_number()) %>%
select(id, pre, keyword, post) %>%
head(10) %>%
knitr::kable(align = 'c')
kwic(corpus_PTT, '懷念') %>%
mutate(id = row_number()) %>%
select(id, pre, keyword, post) %>%
head(10) %>%
knitr::kable(align = 'c')
kwic(corpus_PTT, '思念') %>%
mutate(id = row_number()) %>%
select(id, pre, keyword, post) %>%
sample_n(10) %>%
knitr::kable(align = 'c')
